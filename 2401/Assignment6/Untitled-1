char *d= "Disaster";

        printf("Line %d\n", numLines);

        if(numLines>0){
            printf("Numlines went through\n");
            char *pt;
            pt=strtok(line, ",");
            numCommas=0;
            printf("%s\n", pt);

            if(strcmp(pt, d)==0){
                printf("Strcmp went through\n");
                records++;

                while(pt!=NULL){
                    if(numCommas==1){
                        printf("EVENT SUBGROUP %d: %s\n", numLines, pt);
                        if(strcmp("Meteorological - Hydrological", pt)==0){
                            fwrite(METEOROLOGICAL_HYDROLOGICAL, sizeof(char), 1, fd2);
                        }
                        if(strcmp("Geological", pt)==0){
                            fwrite(GEOLOGICAL, sizeof(char), 1, fd2);
                        }
                        if(strcmp("Biological", pt)==0){
                            fwrite(BIOLOGICAL, sizeof(char), 1, fd2);
                        }
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }

                    if(numCommas==2){
                        printf("EVENT TYPE %d: %s\n", numLines, pt);
                        for(int i=0; i<20; i++){
                            if(comma==EventTypes[i]){
                                if(i==15){
                                    earthquakeCheck==1;
                                }
                                fwrite(&i, sizeof(char), 1, fd2);
                                break;
                            }
                        }
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }

                    if(numCommas==5){
                        printf("FATALITIES %d: %s\n", numLines, pt);
                        int fatalities=*pt;
                        fwrite(&fatalities, sizeof(int), 1, fd2);
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }

                    if(numCommas==6){
                        printf("INJURIES %d: %s\n", numLines, pt);
                        int injuries=*pt;
                        fwrite(&injuries, sizeof(int), 1, fd2);
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }

                    if(numCommas==9){
                        printf("UTILITY %d: %s\n", numLines, pt);
                        int utility=*pt;
                        fwrite(&utility, sizeof(int), 1, fd2);
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }

                    if(numCommas==10 && earthquakeCheck==1){
                        printf("MAGNITUDE %d: %s\n", numLines, pt);
                        earthquakeCheck=0;
                        float magnitude=*pt;
                        fwrite(&magnitude, sizeof(float), 1, fd2);
                        numCommas++;
                        pt = strtok (NULL, ",");
                        continue;
                    }
                    pt = strtok (NULL, ",");
                    numCommas++;
                }
            }
        }
        numLines++;

CDD2.cvs
fscanf(fd1, "%[^\n]s", line)> 0
fscanf(fd1, "%[^,]s", comma